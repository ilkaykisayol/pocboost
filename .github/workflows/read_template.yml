name: Test send mail
on:
    workflow_dispatch: # on demand
        inputs:
            owner:
                description: 'Github username of the environment owner'
                required: true
                type: string
            version:
                description: 'Choose application and environment version'
                required: true
                type: choice
                options: 
                - 'Boost 1.1'
                - 'Boost 1.2'
                default: 'Boost 1.2'
            retention:
                description: 'Choose retention period - environment will be decommissioned after this period'
                required: true
                type: choice
                options: 
                - '1 week'
                - '2 weeks'
                - '4 weeks'
                - '8 weeks'
                - '10 weeks'
                default: '2 weeks'

jobs:
  params:
      name: Set parameters
      runs-on: ubuntu-latest
      outputs:
          owner: ${{ steps.set-variable.outputs.owner }}
      steps:
        - name: Prepare github username
          shell: bash
          id: replace-username
          run: |
              backstageUserName=${{ inputs.owner }}
              replaceValue="user:default/"   
              echo "username="${backstageUserName//$replaceValue}"" >> "$GITHUB_OUTPUT"
        - name: Check params
          shell: bash
          id: set-variable
          run: |
              echo "owner=${{ steps.replace-username.outputs.username }}" >> "$GITHUB_OUTPUT"
  get_user_email:
    runs-on: ubuntu-latest
    name: A job to get a users email
    needs: params
    outputs:
          email: ${{ steps.find-email.outputs.email }}
    steps:
      - name: Find email
        id: find-email
        uses: evvanErb/get-github-email-by-username-action@v1.25
        with:
          github-username: ${{ needs.params.outputs.owner }}
  prepare_mail:
    runs-on: ubuntu-latest
    name: A job to prepare an email
    needs: params
    outputs:
          body: ${{ steps.replace-mail-body.outputs.body }}
    steps:
      - uses: actions/checkout@v2
      - name: Replace HTML File
        id: replace-mail-body
        run: |
          # Read the file content and store it in a variable
          FILE_CONTENT=$(cat ./on-demand-created.html)
          FILE_CONTENT="${FILE_CONTENT//##OWNER##/${{ needs.params.outputs.owner }}}"
          FILE_CONTENT="${FILE_CONTENT//##VERSION##/${{ inputs.version }}}"
          FILE_CONTENT="${FILE_CONTENT//##RETENTION##/${{ inputs.retention }}}"
          echo "body="$FILE_CONTENT"" >> "$GITHUB_OUTPUT"
  send_email:
    runs-on: ubuntu-latest
    name: A job to send an email to user
    needs: [get_user_email, prepare_mail]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run send_mail.py script
        run: python send_mail.py
        env:
          RECIPIENT_EMAIL: ${{ needs.get_user_email.outputs.email }}
          EMAIL_SUBJECT: "Your Subject Here"
          EMAIL_BODY: ${{ needs.prepare_mail.outputs.body }}
          MAIL_USERNAME: ${{secrets.MAIL_USERNAME}}
          MAIL_PASSWORD: ${{secrets.MAIL_PASSWORD}}
          
