name: Test send mai
on:
    workflow_dispatch: # on demand
        inputs:
            owner:
                description: 'Github username of the environment owner'
                required: true
                type: string
            version:
                description: 'Choose application and environment version'
                required: true
                type: choice
                options: 
                - 'Boost 1.1'
                - 'Boost 1.2'
                default: 'Boost 1.2'
            retention:
                description: 'Choose retention period - environment will be decommissioned after this period'
                required: true
                type: choice
                options: 
                - '1 week'
                - '2 weeks'
                - '4 weeks'
                - '8 weeks'
                - '10 weeks'
                default: '2 weeks'

jobs:
  params:
      name: 'Set parameters'
      runs-on: ubuntu-latest
      outputs:
          owner: ${{ steps.set-variable.outputs.owner }}
      steps:
        - name: Prepare github username
          shell: bash
          id: replace-username
          run: |
              backstageUserName=${{ inputs.owner }}
              replaceValue="user:default/"   
              echo "username="${backstageUserName//$replaceValue}"" >> "$GITHUB_OUTPUT"
        - name: Check params
          shell: bash
          id: set-variable
          run: |
              echo "owner=${{ steps.replace-username.outputs.username }}" >> "$GITHUB_OUTPUT"
        - name: Print the username
          run: echo "The username is ${{ steps.replace-username.outputs.username }}"
  get_user_email:
    runs-on: ubuntu-latest
    name: A job to get a users email
    needs: params
    steps:
      - name: find email
        id: find-email
        uses: evvanErb/get-github-email-by-username-action@v1.25
        with:
          github-username: ${{ needs.params.outputs.owner }}
  send_mail:
    runs-on: ubuntu-latest
    needs: [get_user_email, params]
    steps:
      - name: Print the parameters
        run: echo "The email is ${{ needs.get_user_email.outputs.email }}, owner is ${{ needs.params.outputs.owner }}, version is ${{ inputs.version }}, retention is ${{ inputs.retention }}"
      - uses: actions/checkout@v2
      - name: Read and Modify File
        id: replace-mail-body
        run: |
          # Read the file content and store it in a variable
          FILE_CONTENT=$(cat ./on-demand-created.html)
          FILE_CONTENT="${FILE_CONTENT//##OWNER##/${{ inputs.owner }}}"
          FILE_CONTENT="${FILE_CONTENT//##VERSION##/${{ needs.params.outputs.owner }}"
          echo "body="$FILE_CONTENT"" >> "$GITHUB_OUTPUT"
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Specify connection via URL (replaces server_address, server_port, secure,
          # username and password)
          #
          # Format:
          #
          #  * smtp://user:password@server:port
          #  * smtp+starttls://user:password@server:port
          connection_url: smtp://sandbox.smtp.mailtrap.io:2525
          # Required mail server address if not connection_url:
          server_address: sandbox.smtp.mailtrap.io
          # Server port, default 25:
          server_port: 2525
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: false
          # Optional (recommended) mail server username:
          username: 0c07427fedfe31
          # Optional (recommended) mail server password:
          password: 8183f91163c7be
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: ${{ needs.get_user_email.outputs.email }}
          # Required sender full name (address can be skipped):
          from: Luke Skywalker # <user@example.com>
          # Optional plain body:
          body: Build job of ${{github.repository}} completed successfully!
          # Optional HTML body read from file:
          html_body: ${{ steps.replace-mail-body.outputs.body }}
          # Optional carbon copy recipients:
          cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          reply_to: luke@example.com
          # Optional Message ID this message is replying to:
          in_reply_to: <random-luke@example.com>
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional attachments:
          attachments: attachments.zip,git.diff,./dist/static/*.js
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low
